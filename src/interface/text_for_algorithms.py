dfs = "Дан произвольный граф. Алгоритм поиска в глубину позволяет построить обход графа,\
при котором посещаются все вершины, доступные из начальной вершины."

bfs = "Дан невзвешенный (ориентированный или неориентированный) граф.\
 Алгоритм поиска в ширину позволяет найти кратчайшие пути из одной вершины до всех остальных вершин."

Dijkstra_algorithm = "Дан взвешенный ориентированный граф. Алгоритм позволяет найти кратчайшие пути от\
одной вершины до всех остальных, при условии, что все ребра в графе имеют неотрицательные веса."

Ford_Bellman_algorithm = "Дан взвешенный граф. Алгоритм Форда-Беллмана позволяет найти кратчайшие пути из одной вершины\
графа до всех остальных, даже для графов, в которых веса ребер могут быть отрицательными."

Floyd_Warshall_algorithm = "Дан взвешенный граф. Алгоритм позволяет найти кратчайшее расстояние между любыми двумя\
вершинами в графе, при этом веса ребер могут быть как положительными, так и отрицательными."

Prim_algorithm = "Дан взвешенный неориентированный граф G с n вершинами и m рёбрами.\
 Алгоритм заключается в нахождении минимального остовного дерева."

Kruskal_algorithm = "Дан взвешенный неориентированный граф G с n вершинами и m рёбрами.\
 Алгоритм заключается в нахождении минимального остовного дерева."

Ford_Fulkerson_algorithm = "Алгоритм решает задачу нахождения максимального потока в транспортной сети."


